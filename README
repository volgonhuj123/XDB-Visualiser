This small project started when I was bored during my IT class back in high school in 2024.

More precisely we were learning SQL and I imagined what if I could implement something similar to that but more basic.

Then this project came to life, I started by programming my own implementation of a database file (the functions for it are in XDB.cpp).

Then I programmed the code that is responsible for the visual representation of the database file (the code for that is in XDB_visualiser.cpp).
The code is in C and uses the WIN32 api.


The program has 2 modes : slow mode (Default) and quick mode (buggy)
You can alternate between these modes by pressing the F2.
The slow mode has the program blinking and renders slowly
The quick mode renders faster without blinking but with bugs that I'm working on fixing 

The slow mode works by blacking the grid and redrawing everything.
The quick mode works by moving a block of pixel vertically


You can create your own database file by including XDB.CPP :

DataBase new_db;

Relation new_relation;

//We build the relation
//Relation Name : "My relation"
//Number of attribute : 3 

//1st attribute 
//Attribute name : "attribute A"
//Attribute type : float (64 bit float)

//2nd attribute 
//Attribute name : "attribute B"
//Attribute type : int (32 bit signed int)

//3rd attribute 
//Attribute name : "attribute C"
//Attribute type : int (32 bit signed int)

if (Relation_build(&new_relation, "My relation", 3, "attribute A", "float", "attribute B", "int","attribute C","int")){
   return -1;
}


//We add the relation to the database
if (DB_add_relation(&new_db, &new_relation)) {
  return -1;
}

//We add values to the relation which is in the database
for (int i = 1; i < 10; i++) {
	//database pointer , relation name (our relation is called  "My relation" ) ,in this case 3 values (double ,int ,int) be cause we have 3 attributes
    if (DB_relation_insert(&new_db, "My relation", 2.3*i, 245*i, 85*i)) {
       return -1;
    }
}
    
//We save the database to a file called  new_db.xdb
if (DB_savefile(&new_db, "new_db.xdb")) {
   return -1;
}
//We free the database
DB_free(&new_db);
//Compiled using visual studio 2019



And now we can open the database using XDB_visualiser, just make a batch file starting with XDB_visualiser.exe and then include the xdb files that you want open with it. In our case it is
XDB_visualiser.exe new_db.xdb

